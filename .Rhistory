options(ggrepel.max.overlaps = Inf)
fviz_mca_biplot(acm, repel=T,label="var",habillage=grp, invisible="none", col.var = "black",pointsize.ind=0.2,labelsize=5,alpha.ind = 1/8, axes = c(1, 2),
addEllipses=TRUE, ellipse.level=0.95)+labs(title ="Correspondence Analysis Maize")+theme(text = element_text(size = 25),axis.title = element_text(size = 20),
axis.text = element_text(size = 20),plot.title = element_text( hjust = 0.5))
boxplot(acm)
names()
testw<-list()
names(Wheat_best)<-c("Diff", "Sret","SLA","CNmin","CNrange","Nret","Cret","kN","Ndred","Cult")
for (i in 1:8){
g1<-ggplot(Wheat_best[Wheat_best$Cult=="Spring",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1]))), y=Diff,fill=Cult))+
geom_boxplot(fill="orange",alpha=0.5)+ylim(c(0.24,0.35))+
theme(legend.position = "none",plot.margin=unit(c(-0.4,-0.1,-0.3,0), "cm"),axis.text.x = element_blank(), axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
stat_summary(fun = mean, geom = "point", shape=16, size=1,position=position_dodge(1))+
stat_boxplot(geom = "errorbar", width = 0.2) +
labs(title="",x="", y = ifelse(i==1|i==5,"Yield difference",""))
temp <- Wheat_best[Wheat_best$Cult=="Spring",] %>% group_by(Parm = factor(eval(parse(text=names(Wheat_best)[i+1])))) %>%
summarise(Count = length(eval(parse(text=names(Wheat_best)[i+1]))))
d=dim(temp)[1]
b1<-ggplot(Wheat_best[Wheat_best$Cult=="Spring",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1])))))+
geom_bar(color="black",fill="orange",alpha=0.2)+ylim(c(0,max(temp$Count)+5))+
theme(plot.margin=unit(c(-0.5,-0.1,-0.6,0), "cm"),axis.ticks.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 12, b = 0, l = 0)),
axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
geom_text(stat='count', aes(label=paste0("n=",..count..)), y=max(temp$Count)+5,size=ifelse(d>4,2.8,ifelse(d==4,3.5,4)))+
labs(title=" ",x="", y = ifelse(i==1|i==5,"Number of simulations",""))
g2<-ggplot(Wheat_best[Wheat_best$Cult=="Winter",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1]))), y=Diff))+
geom_boxplot(fill="green",alpha=0.2)+ylim(c(0.24,0.38))+
theme(legend.position = "none",plot.margin=unit(c(-0.4,0,-0.3,0.2),"cm"),axis.text.y = element_blank(),
axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.ticks.x = element_blank(),
axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=12,face="bold"))+
stat_summary(fun = mean, geom = "point", shape=16, size=1,position=position_dodge(1))+
stat_boxplot(geom = "errorbar", width = 0.2) +
labs(title=" ",x="", y = "")
temp <- Wheat_best[Wheat_best$Cult=="Winter",] %>% group_by(Parm = factor(eval(parse(text=names(Wheat_best)[i+1])))) %>%
summarise(Count = length(eval(parse(text=names(Wheat_best)[i+1]))))
d=dim(temp)[1]
b2<-ggplot(Wheat_best[Wheat_best$Cult=="Winter",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1])))))+
geom_bar(color="black",fill="green",alpha=0.2)+ylim(c(0,max(temp$Count)+5))+
theme(plot.margin=unit(c(-0.5,0,-0.6,0.2), "cm"), axis.text.y = element_blank(),axis.ticks.y = element_blank(),
axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=12,face="bold"))+
geom_text(stat='count', aes(label=paste0("n=",..count..)), y=max(temp$Count)+5,size=ifelse(d>4,2.8,ifelse(d==4,3.5,4)))+
labs(title=" ",x="", y = "")
testw[[i]]<-grid.arrange(g1,g2,b1,b2,ncol=2,nrow=2,bottom =(textGrob(names(Wheat_best)[i+1],gp=gpar(fontsize = 12,cex=1.2,pos=2))))
}
do.call("grid.arrange",c(testw,nrow=2))
for (i in 1:8){
g1<-ggplot(Wheat_best[Wheat_best$Cult=="Spring",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1]))), y=Diff,fill=Cult))+
geom_boxplot(fill="orange",alpha=0.5)+ylim(c(0.24,0.35))+
theme(legend.position = "none",plot.margin=unit(c(-0.4,-0.1,-0.3,0), "cm"),axis.text.x = element_blank(), axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
stat_summary(fun = mean, geom = "point", shape=16, size=1,position=position_dodge(1))+
stat_boxplot(geom = "errorbar", width = 0.2) +
labs(title="",x="", y = ifelse(i==1|i==5,"Yield difference",""))
temp <- Wheat_best[Wheat_best$Cult=="Spring",] %>% group_by(Parm = factor(eval(parse(text=names(Wheat_best)[i+1])))) %>%
summarise(Count = length(eval(parse(text=names(Wheat_best)[i+1]))))
d=dim(temp)[1]
b1<-ggplot(Wheat_best[Wheat_best$Cult=="Spring",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1])))))+
geom_bar(color="black",fill="orange",alpha=0.2)+ylim(c(0,max(temp$Count)+5))+
theme(plot.margin=unit(c(-0.5,-0.1,-0.6,0), "cm"),axis.ticks.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 12, b = 0, l = 0)),
axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
geom_text(stat='count', aes(label=paste0("n=",..count..)), y=max(temp$Count)+5,size=ifelse(d>4,2.8,ifelse(d==4,3.5,4)))+
labs(title=" ",x="", y = ifelse(i==1|i==5,"Number of simulations",""))
g2<-ggplot(Wheat_best[Wheat_best$Cult=="Winter",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1]))), y=Diff))+
geom_boxplot(fill="green",alpha=0.2)+ylim(c(0.24,0.36))+
theme(legend.position = "none",plot.margin=unit(c(-0.4,0,-0.3,0.2),"cm"),axis.text.y = element_blank(),
axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.ticks.x = element_blank(),
axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=12,face="bold"))+
stat_summary(fun = mean, geom = "point", shape=16, size=1,position=position_dodge(1))+
stat_boxplot(geom = "errorbar", width = 0.2) +
labs(title=" ",x="", y = "")
temp <- Wheat_best[Wheat_best$Cult=="Winter",] %>% group_by(Parm = factor(eval(parse(text=names(Wheat_best)[i+1])))) %>%
summarise(Count = length(eval(parse(text=names(Wheat_best)[i+1]))))
d=dim(temp)[1]
b2<-ggplot(Wheat_best[Wheat_best$Cult=="Winter",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1])))))+
geom_bar(color="black",fill="green",alpha=0.2)+ylim(c(0,max(temp$Count)+5))+
theme(plot.margin=unit(c(-0.5,0,-0.6,0.2), "cm"), axis.text.y = element_blank(),axis.ticks.y = element_blank(),
axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=12,face="bold"))+
geom_text(stat='count', aes(label=paste0("n=",..count..)), y=max(temp$Count)+5,size=ifelse(d>4,2.8,ifelse(d==4,3.5,4)))+
labs(title=" ",x="", y = "")
testw[[i]]<-grid.arrange(g1,g2,b1,b2,ncol=2,nrow=2,bottom =(textGrob(names(Wheat_best)[i+1],gp=gpar(fontsize = 12,cex=1.2,pos=2))))
}
do.call("grid.arrange",c(testw,nrow=2))
for (i in 1:8){
g1<-ggplot(Wheat_best[Wheat_best$Cult=="Spring",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1]))), y=Diff,fill=Cult))+
geom_boxplot(fill="orange",alpha=0.5)+ylim(c(0.24,0.35))+
theme(legend.position = "none",plot.margin=unit(c(-0.4,-0.1,-0.3,0), "cm"),axis.text.x = element_blank(), axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
stat_summary(fun = mean, geom = "point", shape=16, size=1,position=position_dodge(1))+
stat_boxplot(geom = "errorbar", width = 0.2) +
labs(title="",x="", y = ifelse(i==1|i==5,"Yield difference",""))
temp <- Wheat_best[Wheat_best$Cult=="Spring",] %>% group_by(Parm = factor(eval(parse(text=names(Wheat_best)[i+1])))) %>%
summarise(Count = length(eval(parse(text=names(Wheat_best)[i+1]))))
d=dim(temp)[1]
b1<-ggplot(Wheat_best[Wheat_best$Cult=="Spring",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1])))))+
geom_bar(color="black",fill="orange",alpha=0.2)+ylim(c(0,max(temp$Count)+5))+
theme(plot.margin=unit(c(-0.5,-0.1,-0.6,0), "cm"),axis.ticks.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 12, b = 0, l = 0)),
axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
geom_text(stat='count', aes(label=paste0("n=",..count..)), y=max(temp$Count)+5,size=ifelse(d>4,2.8,ifelse(d==4,3.5,4)))+
labs(title=" ",x="", y = ifelse(i==1|i==5,"Number of simulations",""))
g2<-ggplot(Wheat_best[Wheat_best$Cult=="Winter",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1]))), y=Diff))+
geom_boxplot(fill="green",alpha=0.5)+ylim(c(0.24,0.36))+
theme(legend.position = "none",plot.margin=unit(c(-0.4,0,-0.3,0.2),"cm"),axis.text.y = element_blank(),
axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.ticks.x = element_blank(),
axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=12,face="bold"))+
stat_summary(fun = mean, geom = "point", shape=16, size=1,position=position_dodge(1))+
stat_boxplot(geom = "errorbar", width = 0.2) +
labs(title=" ",x="", y = "")
temp <- Wheat_best[Wheat_best$Cult=="Winter",] %>% group_by(Parm = factor(eval(parse(text=names(Wheat_best)[i+1])))) %>%
summarise(Count = length(eval(parse(text=names(Wheat_best)[i+1]))))
d=dim(temp)[1]
b2<-ggplot(Wheat_best[Wheat_best$Cult=="Winter",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1])))))+
geom_bar(color="black",fill="green",alpha=0.2)+ylim(c(0,max(temp$Count)+5))+
theme(plot.margin=unit(c(-0.5,0,-0.6,0.2), "cm"), axis.text.y = element_blank(),axis.ticks.y = element_blank(),
axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=12,face="bold"))+
geom_text(stat='count', aes(label=paste0("n=",..count..)), y=max(temp$Count)+5,size=ifelse(d>4,2.8,ifelse(d==4,3.5,4)))+
labs(title=" ",x="", y = "")
testw[[i]]<-grid.arrange(g1,g2,b1,b2,ncol=2,nrow=2,bottom =(textGrob(names(Wheat_best)[i+1],gp=gpar(fontsize = 12,cex=1.2,pos=2))))
}
do.call("grid.arrange",c(testw,nrow=2))
for (i in 1:8){
g1<-ggplot(Wheat_best[Wheat_best$Cult=="Spring",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1]))), y=Diff,fill=Cult))+
geom_boxplot(fill="orange",alpha=0.5)+ylim(c(0.24,0.35))+
theme(legend.position = "none",plot.margin=unit(c(-0.4,-0.1,-0.3,0), "cm"),axis.text.x = element_blank(), axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
stat_summary(fun = mean, geom = "point", shape=16, size=1,position=position_dodge(1))+
stat_boxplot(geom = "errorbar", width = 0.2) +
labs(title="",x="", y = ifelse(i==1|i==5,"Yield difference",""))
temp <- Wheat_best[Wheat_best$Cult=="Spring",] %>% group_by(Parm = factor(eval(parse(text=names(Wheat_best)[i+1])))) %>%
summarise(Count = length(eval(parse(text=names(Wheat_best)[i+1]))))
d=dim(temp)[1]
b1<-ggplot(Wheat_best[Wheat_best$Cult=="Spring",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1])))))+
geom_bar(color="black",fill="orange",alpha=0.5)+ylim(c(0,max(temp$Count)+5))+
theme(plot.margin=unit(c(-0.5,-0.1,-0.6,0), "cm"),axis.ticks.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 12, b = 0, l = 0)),
axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
geom_text(stat='count', aes(label=paste0("n=",..count..)), y=max(temp$Count)+5,size=ifelse(d>4,2.8,ifelse(d==4,3.5,4)))+
labs(title=" ",x="", y = ifelse(i==1|i==5,"Number of simulations",""))
g2<-ggplot(Wheat_best[Wheat_best$Cult=="Winter",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1]))), y=Diff))+
geom_boxplot(fill="green",alpha=0.5)+ylim(c(0.24,0.36))+
theme(legend.position = "none",plot.margin=unit(c(-0.4,0,-0.3,0.2),"cm"),axis.text.y = element_blank(),
axis.text.x = element_blank(),axis.ticks.y = element_blank(),axis.ticks.x = element_blank(),
axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=12,face="bold"))+
stat_summary(fun = mean, geom = "point", shape=16, size=1,position=position_dodge(1))+
stat_boxplot(geom = "errorbar", width = 0.2) +
labs(title=" ",x="", y = "")
temp <- Wheat_best[Wheat_best$Cult=="Winter",] %>% group_by(Parm = factor(eval(parse(text=names(Wheat_best)[i+1])))) %>%
summarise(Count = length(eval(parse(text=names(Wheat_best)[i+1]))))
d=dim(temp)[1]
b2<-ggplot(Wheat_best[Wheat_best$Cult=="Winter",], aes(x=as.factor(eval(parse(text=names(Wheat_best)[i+1])))))+
geom_bar(color="black",fill="green",alpha=0.5)+ylim(c(0,max(temp$Count)+5))+
theme(plot.margin=unit(c(-0.5,0,-0.6,0.2), "cm"), axis.text.y = element_blank(),axis.ticks.y = element_blank(),
axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=12,face="bold"))+
geom_text(stat='count', aes(label=paste0("n=",..count..)), y=max(temp$Count)+5,size=ifelse(d>4,2.8,ifelse(d==4,3.5,4)))+
labs(title=" ",x="", y = "")
testw[[i]]<-grid.arrange(g1,g2,b1,b2,ncol=2,nrow=2,bottom =(textGrob(names(Wheat_best)[i+1],gp=gpar(fontsize = 12,cex=1.2,pos=2))))
}
do.call("grid.arrange",c(testw,nrow=2))
for (i in 1:8){
g1<-ggplot(Maize_best[Maize_best$Clust=="1",], aes(x=as.factor(eval(parse(text=names(Maize_best)[i+1]))), y=Diff,fill=Clust))+
geom_boxplot(fill="orange",alpha=0.5)+ylim(c(0.19,0.32))+
theme(legend.position = "none",plot.margin=unit(c(-0.4,-0.1,-0.3,0), "cm"), axis.text.x = element_blank(), axis.ticks.y = element_blank(),
axis.ticks.x = element_blank(),axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
stat_summary(fun = mean, geom = "point", shape=16, size=1,position=position_dodge(1))+
stat_boxplot(geom = "errorbar", width = 0.2) +
labs(title="",x="", y = ifelse(i==1|i==5,"Yield difference",""))
temp <- Maize_best[Maize_best$Clust=="1",] %>% group_by(Parm = factor(eval(parse(text=names(Maize_best)[i+1])))) %>%
summarise(Count = length(eval(parse(text=names(Maize_best)[i+1]))))
d=dim(temp)[1]
b1<-ggplot(Maize_best[Maize_best$Clust=="1",], aes(x=as.factor(eval(parse(text=names(Maize_best)[i+1])))))+
geom_bar(color="black",fill="orange",alpha=0.5)+ylim(c(0,max(temp$Count)+5))+
theme(plot.margin=unit(c(-0.5,-0.1,-0.6,0), "cm"),axis.ticks.y = element_blank(),
axis.title.y = element_text(margin = margin(t = 0, r = 12, b = 0, l = 0)),
axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
geom_text(stat='count', aes(label=paste0("n=",..count..)), y=max(temp$Count)+5,size=ifelse(d>4,2.8,ifelse(d==4,3.5,4)))+
labs(title=" ",x="", y = ifelse(i==1|i==5,"Number of simulations",""))
g2<-ggplot(Maize_best[Maize_best$Clust=="2",], aes(x=as.factor(eval(parse(text=names(Maize_best)[i+1]))), y=Diff))+
geom_boxplot(fill="green",alpha=0.5)+ylim(c(0.19,0.40))+
theme(legend.position = "none",plot.margin=unit(c(-0.4,-0.1,-0.3,0.2),"cm"), axis.text.y = element_blank(), axis.text.x = element_blank(),
axis.ticks.y = element_blank(),axis.title=element_text(size=12,face="bold"),axis.text=element_text(size=12,face="bold"))+
stat_summary(fun = mean, geom = "point", shape=16, size=1,position=position_dodge(1))+
stat_boxplot(geom = "errorbar", width = 0.2) +
labs(title=" ",x="", y = "")
temp <- Maize_best[Maize_best$Clust=="2",] %>% group_by(Parm = factor(eval(parse(text=names(Maize_best)[i+1])))) %>%
summarise(Count = length(eval(parse(text=names(Maize_best)[i+1]))))
d=dim(temp)[1]
b2<-ggplot(Maize_best[Maize_best$Clust=="2",], aes(x=as.factor(eval(parse(text=names(Maize_best)[i+1])))))+
geom_bar(color="black",fill="green",alpha=0.5)+ylim(c(0,max(temp$Count)+5))+
theme(plot.margin=unit(c(-0.5,0,-0.6,0.2), "cm"), axis.text.y = element_blank(),axis.ticks.y = element_blank(),
axis.title=element_text(size=10,face="bold"),axis.text=element_text(size=12,face="bold"))+
geom_text(stat='count', aes(label=paste0("n=",..count..)), y=max(temp$Count)+5,size=ifelse(d>4,2.8,ifelse(d==4,3.5,4)))+
labs(title=" ",x="", y = "")
test[[i]]<-grid.arrange(g1,g2,b1,b2,ncol=2,nrow=2,bottom =(textGrob(names(Maize_best)[i+1],gp=gpar(fontsize = 12,cex=1.2,pos=1))))
}
do.call("grid.arrange",c(test,nrow=2))
library(ggplot2)
library(rworldmap)
ObsC_<-Yi_HIm[c(1:22),c(10:11,18)]
ObsC_$color=ifelse(ObsC_$Cluster==1,"red","purple")
ObsW$color=ifelse(ObsW$wheat=="Spring","black","blue")
dev.new()
par(mai=c(0.5,0,0.2,0),xaxs="i",yaxs="i")
mapBubbles( dF=getMap(),
, oceanCol="lightblue"
, landCol="wheat" )
points(ObsC_$Lon, ObsC_$Lat, pch =  16, col=ObsC_$color)
points(ObsW$Lon, ObsW$Lat, pch =  17, col=ObsW$color)
legend(x="bottom", legend =c("Maize-High yield", "Maize-Low yield","Wheat-Spring","Wheat-Winter") ,col=c("red","purple","black","blue"),pch=c(16,16,17,17), horiz=T)
title(main="Cultivar locations distribution", size =20, cex.main=2,line=-6)
View(Senes_HI)
plot(Senes_HI$d_perc_rf,Senes_HI$HTeCS,ylab="HI",xlab="Harvest dead leaves (%) Maize rainfed",col=ifelse(Senes_HI$Sret==1,"black","red"))
plot(Senes_HI$d_perc_rf[Senes_HI$Sret==0,],Senes_HI$HTeCS[Senes_HI$Sret==0,],ylab="HI",xlab="Harvest dead leaves (%) Maize rainfed",col="red")
plot(Senes_HI$d_perc_rf[Senes_HI$Sret==0,],Senes_HI$HTeCS[Senes_HI$Sret==0,],ylab="HI",xlab="Harvest dead leaves (%) Maize rainfed",col="red")
plot(Senes_HI$d_perc_rf[Senes_HI$Sret==0,],Senes_HI$HTeCS[Senes_HI$Sret==0,],ylab="HI",xlab="Dead leaves in Maize (%)",col="red")
test=[Senes_HI$Sret==0,]
test=Senes_HI$HTeCS[Senes_HI$Sret==0,]
test=Senes_HI[Senes_HI$Sret==0,]
View(test)
plot(test$d_perc_rf,test$HTeCS,ylab="HI",xlab="Dead leaves in Maize (%)",col="red")
dev.new()
par(mfrow=c(2,1),omi=c(0.25,0,0,0),mai=c(0,0,0,0))
plot(test$d_perc_rf,test$HTeCS,ylab="HI",xlab="Dead leaves in Maize (%)",col="red")
par(mfrow=c(1,1),omi=c(0.25,0.25,0.25,0.25),mai=c(0,0,0,0))
plot(test$d_perc_rf,test$HTeCS,ylab="HI",xlab="Dead leaves in Maize (%)",col="red")
par(mfrow=c(1,1),omi=c(1,0.25,1,0.25),mai=c(0,0,0,0))
plot(test$d_perc_rf,test$HTeCS,ylab="HI",xlab="Dead leaves in Maize (%)",col="red")
par(mfrow=c(1,1),omi=c(0.25,1,1,0.25),mai=c(0,0,0,0))
plot(test$d_perc_rf,test$HTeCS,ylab="HI",xlab="Dead leaves in Maize (%)",col="red")
par(mfrow=c(1,1),omi=c(1,0.25,1,0.25),mai=c(0,0,0,0))
plot(test$d_perc_rf,test$HTeCS,ylab="HI",xlab="Dead leaves in Maize (%)",col="red")
par(mfrow=c(1,1),omi=c(1,1,0.25,0.25),mai=c(0,0,0,0))
plot(test$d_perc_rf,test$HTeCS,ylab="HI",xlab="Dead leaves in Maize (%)",col="red")
plot(test$d_perc_rf,test$HTeCS,ylab="HI",xlab="Dead leaves in Maize (%)",col="red",ylab="HI",xlab="Harvest dead leaves (%) Maize irrigated")
plot(test$d_perc_rf,test$HTeCS,ylab="HI",xlab="Dead leaves in Maize (%)",col="red")
plot(test$d_perc_rf,test$HTeCS,ylab="HI",xlab="Dead leaves in Maize (%)",col="red")
title(ylab="HI",xlab="Dead leaves in Maize (%)", line=0, cex.lab=1.2)
plot(test$d_perc_rf,test$HTeCS,col="red")
title(ylab="HI",xlab="Dead leaves in Maize (%)", line=0, cex.lab=0)
library(FactoMineR)
library(missMDA)
library(ca)
library(ncdf4)
library(raster)
library(rworldmap)
library(dplyr)
library(plyr)
library(ltm)
library(devtools)
install_github('sinhrks/ggfortify')
#Areas
crop<-c("SPAMest_Rice_")
f
library(FactoMineR)
library(missMDA)
library(ca)
library(ncdf4)
library(raster)
library(rworldmap)
library(dplyr)
library(plyr)
library(ltm)
library(devtools)
install_github('sinhrks/ggfortify')
library(missMDA)
#Areas
crop<-c("SPAMest_Rice_")
cropirr<-c("SPAMest_Riceirr_")
setwd("C:/Users/hac809/Documents/Pughtam-cropozone/Global_evaluation_outputs/Area")
ArNew[[j]]<-list.files(pattern="SPAMest_Rice_")
ArNewi[[j]]<-list.files(pattern="SPAMest_Riceirr_")
library(ca)
setwd("C:/Users/hac809/Documents/Pughtam-cropozone/Global_evaluation_outputs/Area")
ArNewr<-list()
#Areas
ArNew<-list()
ArNewi<-list()
ArNewr<-list()
setwd("C:/Users/hac809/Documents/Pughtam-cropozone/Global_evaluation_outputs/Area")
ArRice<-list.files(pattern="SPAMest_Rice_")
ArRicei<-list.files(pattern="SPAMest_Riceirr_")
ArRice<-brick(SPAMest_Rice_1960_2010.nc)
setwd("C:/Users/hac809/Documents/Pughtam-cropozone/Global_evaluation_outputs/Area")
ArRice<-brick("SPAMest_Rice_1960_2010.nc")
ArRICEi<-brick("SPAMest_Riceirr_1960_2010.nc")*(ArRice/ArRice)
ArRicer<-ArRice-ArRicei
ArRicei<-brick("SPAMest_Riceirr_1960_2010.nc")*(ArRice/ArRice)
ArRicer<-ArRice-ArRicei
rm(ArRICEi)
ArRice
ArRice05<-ArRice[[45]];ArRice05i<-ArRicei[[45]];ArRice05r<-ArRicer[[45]]
plor(ArRice05r)
plor(ArRice05)
plot(ArRice05)
crop_rayR<-brick("../Ray_Yield_Rice_newcrops_1970-2010.nc")
df<-list()
for(i in 1:nlayers(x)){
df[[i]]<-as.data.frame(x[[i]],xy=TRUE)
df[[i]]$year<-2000+i
}
Deraster<-function(x){
df<-list()
for(i in 1:nlayers(x)){
df[[i]]<-as.data.frame(x[[i]],xy=TRUE)
df[[i]]$year<-2000+i
}
df<-lapply(df, setNames, c("Lon","Lat","Yield","Years"))
return(bind_rows(df, .id = "label"))
}
crop_rayR1<-crop_rayR[[32:41]]
yield_Raydf<-Deraster(crop_rayR)
library(dplyr)
install.packages()
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
remove.packages(dplyr)
remove.packages("dplyr")
remove.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
remove.packages("rlang")
install.packages("rlang")
install.packages("rlang")
library(rlang)
install.packages("rlang")
install.packages("rlang")
library(rlang)
remove.packages("rlang")
remove.packages("rlang")
install.packages("rlang")
library(rlang)
#Source("Senescheck.R")
library(FactoMineR)
library(missMDA)
library(ca)
library(ncdf4)
library(raster)
library(rworldmap)
library(plyr)
library(dplyr)
library(ltm)
library(devtools)
install_github('sinhrks/ggfortify')
library(ggfortify)
#Areas
ArNew<-list()
ArNewi<-list()
ArNewr<-list()
setwd("C:/Users/hac809/Documents/Pughtam-cropozone/Global_evaluation_outputs/Area")
ArRice<-brick("SPAMest_Rice_1960_2010.nc")
ArRicei<-brick("SPAMest_Riceirr_1960_2010.nc")*(ArRice/ArRice)
ArRicer<-ArRice-ArRicei
ArRice05<-ArRice[[45]];ArRice05i<-ArRicei[[45]];ArRice05r<-ArRicer[[45]]
crop_rayR<-brick("../Ray_Yield_Rice_newcrops_1970-2010.nc")
Deraster<-function(x){
df<-list()
for(i in 1:nlayers(x)){
df[[i]]<-as.data.frame(x[[i]],xy=TRUE)
df[[i]]$year<-2000+i
}
df<-lapply(df, setNames, c("Lon","Lat","Yield","Years"))
return(bind_rows(df, .id = "label"))
}
crop_rayR1<-crop_rayR[[32:41]]
setwd("C:/Users/hac809/Desktop/Sensitivity2/")
yield_Raydf<-Deraster(crop_rayR1)
yield_Raydf<-na.omit(yield_Raydf)
ObsR=read.csv("Obs_rice.csv",h=T)
ObsR1=ObsR
ObsR1$Lon[ObsR1$Lon== -82.25]<- -90.25;ObsR1$Lat[ObsR1$Lat==29.75]<-35.75
ObsR1$Lon[ObsR1$Lon==-76.75]<- -90.75;ObsR1$Lat[ObsR1$Lat==39.25]<-36.25
YiRi<-yield_Raydf
yieldRayRice<-YiRi[paste0(YiRi$Lon,YiRi$Lat) %in% paste0(ObsR1$Lon,ObsR1$Lat),]
yieldRayAvgR<-aggregate(Yield~Lon+Lat,yieldRayRice,mean);colnames(yieldRayAvgR)[3]="YieldRay"
yieldRayAvgR$Areai<-extract(ArRice05i,yieldRayAvgR[,c(1,2)])
yieldRayAvgR$Arear<-extract(ArRice05r,yieldRayAvgR[,c(1,2)])
yieldRayAvgR$Lon[yieldRayAvgR$Lon== -90.25]<- -82.25;yieldRayAvgR$Lat[yieldRayAvgR$Lon== -82.25 & yieldRayAvgR$Lat==35.75]<-29.75
yieldRayAvgR$Lon[yieldRayAvgR$Lon== -90.75]<- -76.75;yieldRayAvgR$Lat[yieldRayAvgR$Lon== -76.75 & yieldRayAvgR$Lat==36.25]<-39.25
yieldRayAvgR$YieldRay=yieldRayAvgR$YieldRay/10
FRai<- read.csv("C:/Users/hac809/Documents/Pughtam-cropozone/Global_evaluation_inputs/FAO/FAO_RiceBC.csv", h=T)
FRai<-subset(FRai,year<2011&year>2000)
FRaiy<-aggregate(FYield~UN,FRai, FUN=mean)
countries<-as.data.frame(gridCountriesDegreesHalf)
names(countries)<-c("UN","Lon","Lat")
setwd("C:/Users/hac809/Desktop/Sensitivity2")
yield_d2RIa<-read.table("yieldRI.out",h=T);yield_d2RIa$Sret=1
yield_d2RIb<-read.table("yieldRI_nort.out",h=T);yield_d2RIb$Sret=0
yield_d2RI<-rbind(yield_d2RIa,yield_d2RIb);
yield_d2RI<-yield_d2RI %>% relocate(Sret, .before = SLA)
Yield<-join(yield_d2RI,ObsR)
Yield<-join(Yield,yieldRayAvgR)
Yield<-join(Yield,countries)
Yield$Num<-ifelse(Yield$Sret==1,Yield$Num+8640,Yield$Num)
Yield<-join(Yield,FRaiy)
Yield$FYield=Yield$FYield/10
Yield$YTrRI=Yield$TrRin/(2*0.446*0.87)
Yield$DiffRay<-abs(Yield$YieldRay-Yield$YTrRI)/Yield$YieldRay
Yield$DiffCount<-abs(Yield$FYield-Yield$YTrRI)/Yield$FYield
HI_d2RIa<-read.table("HIRI.out",h=T);HI_d2RIa$Sret=1
HI_d2RIb<-read.table("HIRI_nort.out",h=T);HI_d2RIb$Sret=0
HI_d2RI<-rbind(HI_d2RIa,HI_d2RIb);
HI_d2RI<-HI_d2RI %>% relocate(Sret, .before = SLA)
HI<-join(HI_d2RI,ObsR)
HI<-join(HI,yieldRayAvgR)
HI$Num<-ifelse(HI$Sret==1,HI$Num+8640,HI$Num)
HI$HTrRI=HI$TrRin
####Evaluation by location.
Yi_HIr=join(Yield[,c(1:11,22,23,24)],HI[,-c(12:19)])
###Distance of QAE for clusters using Country yield
SSE_3<-data.frame("Num"=1)
SSE_3<-as.data.frame(seq(1:17280));names(SSE_3)[1]<-"Num"
for (i in SSE_3$Num){
SSE_3[i,"YieldR"]=quantile(Yi_HIr$DiffRay[which(Yi_HIr$Num==i)],0.8)
SSE_3[i,"YieldC"]=quantile(Yi_HIr$DiffCount[which(Yi_HIr$Num==i)],0.8)
SSE_3[i,"HIav"]=mean(Yi_HIr$HTrRI[which(Yi_HIr$Num==i)])
}
SSE2r<-join(SSE_3,Yi_HIr[,c(1:9)],match='first')
Temp<-subset(SSE2r,HIav<0.61&HIav>0.36)
Temp<-Temp[,c(-6,-7)]
RiceAv<-data.frame(matrix(ncol=9))
RiceBest<-data.frame(matrix(ncol=9))
for (i in 1:2){
Temp1<-Temp[order(Temp[,i+1]),][1,c(1,5:12)]
Temp2<-Temp[order(Temp[,i+1]),][c(1:10),c(1,5:12)]
Temp2<-colMeans(Temp2)
RiceBest[i,]<-Temp1
RiceAv[i,]<-Temp2
}
names(RiceAv)=names(Temp)[c(1,5:12)];RiceAv$var<-paste0(names(Temp)[2:3],"Av")
names(RiceBest)=names(Temp)[c(1,5:12)];RiceBest$var<-names(Temp)[2:3]
Rice<-rbind(RiceBest,RiceAv)
View(SSE_3)
View(Yi_HIr)
###Distance of QAE for clusters using Country yield
SSE_3<-data.frame("Num"=1)
SSE_3<-as.data.frame(seq(1:17280));names(SSE_3)[1]<-"Num"
for (i in SSE_3$Num){
SSE_3[i,"YieldR"]=quantile(Yi_HIr$DiffRay[which(Yi_HIr$Num==i)],0.8)
SSE_3[i,"YieldC"]=quantile(Yi_HIr$DiffCount[which(Yi_HIr$Num==i)],0.8)
SSE_3[i,"HIav"]=mean(Yi_HIr$HTrRI[which(Yi_HIr$Num==i)])
}
SSE2r<-join(SSE_3,Yi_HIr[,c(1:9)],match='first')
View(SSE2r)
Temp<-subset(SSE2r,HIav<0.61&HIav>0.36)
Temp<-Temp[,c(-6,-7)]
View(Temp)
RiceAv<-data.frame(matrix(ncol=9))
RiceBest<-data.frame(matrix(ncol=9))
for (i in 1:2){
Temp1<-Temp[order(Temp[,i+1]),][1,c(1,5:12)]
Temp2<-Temp[order(Temp[,i+1]),][c(1:10),c(1,5:12)]
Temp2<-colMeans(Temp2)
RiceBest[i,]<-Temp1
RiceAv[i,]<-Temp2
}
for (i in 1:2){
Temp1<-Temp[order(Temp[,i+1]),][1,c(1,5:12)]
Temp2<-Temp[order(Temp[,i+1]),][c(1:10),c(1,5:12)]
Temp2<-colMeans(Temp2)
RiceBest[i,]<-Temp1
RiceAv[i,]<-Temp2
}
Temp<-subset(SSE2r,HIav<0.61&HIav>0.36)
RiceAv<-data.frame(matrix(ncol=9))
RiceBest<-data.frame(matrix(ncol=9))
for (i in 1:2){
Temp1<-Temp[order(Temp[,i+1]),][1,c(1,5:12)]
Temp2<-Temp[order(Temp[,i+1]),][c(1:10),c(1,5:12)]
Temp2<-colMeans(Temp2)
RiceBest[i,]<-Temp1
RiceAv[i,]<-Temp2
}
names(RiceAv)=names(Temp)[c(1,5:12)];RiceAv$var<-paste0(names(Temp)[2:3],"Av")
names(RiceBest)=names(Temp)[c(1,5:12)];RiceBest$var<-names(Temp)[2:3]
Rice<-rbind(RiceBest,RiceAv)
View(Rice)
HI_d2RIa<-read.table("HIRI.out",h=T);HI_d2RIa$Sret=1
HI_d2RIb<-read.table("HIRI_nort.out",h=T);HI_d2RIb$Sret=0
HI_d2RI<-rbind(HI_d2RIa,HI_d2RIb);
HI_d2RI<-HI_d2RI %>% relocate(Sret, .before = SLA)
HI<-join(HI_d2RI,ObsR)
HI<-join(HI,yieldRayAvgR)
HI$Num<-ifelse(HI$Sret==1,HI$Num+8640,HI$Num)
HI$HTrRI=HI$TrRin
Yi_HIr=join(Yield[,c(1:11,22,23,24)],HI[,-c(12:19)])
###Distance of QAE for clusters using Country yield
SSE_3<-data.frame("Num"=1)
SSE_3<-as.data.frame(seq(1:17280));names(SSE_3)[1]<-"Num"
for (i in SSE_3$Num){
SSE_3[i,"YieldR"]=quantile(Yi_HIr$DiffRay[which(Yi_HIr$Num==i)],0.8)
SSE_3[i,"YieldC"]=quantile(Yi_HIr$DiffCount[which(Yi_HIr$Num==i)],0.8)
SSE_3[i,"HIav"]=mean(Yi_HIr$HTrRI[which(Yi_HIr$Num==i)])
}
SSE2r<-join(SSE_3,Yi_HIr[,c(1:9)],match='first')
Temp<-subset(SSE2r,HIav<0.61&HIav>0.36)
#Temp<-Temp[,c(-6,-7)]
RiceAv<-data.frame(matrix(ncol=9))
RiceBest<-data.frame(matrix(ncol=9))
for (i in 1:2){
Temp1<-Temp[order(Temp[,i+1]),][1,c(1,5:12)]
Temp2<-Temp[order(Temp[,i+1]),][c(1:10),c(1,5:12)]
Temp2<-colMeans(Temp2)
RiceBest[i,]<-Temp1
RiceAv[i,]<-Temp2
}
names(RiceAv)=names(Temp)[c(1,5:12)];RiceAv$var<-paste0(names(Temp)[2:3],"Av")
names(RiceBest)=names(Temp)[c(1,5:12)];RiceBest$var<-names(Temp)[2:3]
Rice<-rbind(RiceBest,RiceAv)
View(Rice)
